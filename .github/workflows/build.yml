name: Build application

on:
  push:
    branches: [develop, production]

  workflow_dispatch:

  workflow_call:
    inputs:
      store_artifacts:
        type: boolean
        required: false
    outputs:
      version_tag:
        description: "Version used for Git tag"
        value: ${{ jobs.version.outputs.version_tag }}

jobs:
  version:
    name: Versioning
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Determine version
      id: versioning
      uses: ./.github/actions/versioning

    outputs:
      version: ${{ steps.versioning.outputs.version }}
      version_tag: ${{ steps.versioning.outputs.version_tag }}
      build_version: ${{ steps.versioning.outputs.build_version }}

  build_ios:
    name: Build iOS App
    runs-on: macos-latest
    needs: [version]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build iOS app
        uses: ./.github/actions/build_ios
        with:
          version: ${{ needs.version.outputs.version }}
          build_version: ${{ needs.version.outputs.build_version }}
          apple_ios_signing_cert_dev: ${{ secrets.APPLE_IOS_SIGNING_CERTIFICATE_DEVELOPMENT }}
          apple_ios_signing_cert_pw_dev: ${{ secrets.APPLE_IOS_SIGNING_CERTIFICATE_DEVELOPMENT_PASSWORD }}
          apple_ios_provisioning_profile_dev: ${{ secrets.APPLE_IOS_PROVISIONING_PROFILE_DEVELOPMENT }}
          apple_ios_signing_cert_prod: ${{ secrets.APPLE_IOS_SIGNING_CERT_PROD }}
          apple_ios_signing_cert_pw_prod: ${{ secrets.APPLE_IOS_SIGNING_CERT_PW }}
          apple_ios_provisioning_profile_prod: ${{ secrets.APPLE_IOS_PROVISIONING_PROFILE_PROD }}
          apple_keychain_pw: ${{ secrets.APPLE_KEYCHAIN_PW }}
          store_artifacts: ${{ inputs.store_artifacts }}

  build_android:
    name: Build Android App
    runs-on: ubuntu-latest
    needs: [version]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build Android app
        uses: ./.github/actions/build_android
        with:
          version: ${{ needs.version.outputs.version }}
          build_version: ${{ needs.version.outputs.build_version }}
          store_artifacts: ${{ inputs.store_artifacts }}