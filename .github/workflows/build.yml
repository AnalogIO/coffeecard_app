name: Build application

on:
  workflow_dispatch:

  workflow_call:
    inputs:
      store_artifacts:
        type: boolean
        required: false
        default: false
      tag_name:
        type: string
        required: true
      build_type:
        type: string
        required: true
        description: >
          Whether to build a development or production version of the app.
          A 'development' build connects to the development backend for testing,
          while a 'production' build connects to the production backend.
          It is an error to specify a build type other than
          'development' or 'production'.

jobs:
  version:
    name: Versioning
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.0

      - name: Validate build_type
        uses: ./.github/actions/verify_build_type
        with:
          build_type: ${{ inputs.build_type }}

      - name: Determine build version
        id: build_version
        run: |
          LEGACY_PIPELINE_BUILD_NO_START=267

          BUILD_NO=$((${{ github.run_number }} + $LEGACY_PIPELINE_BUILD_NO_START))
          echo "build_no=$BUILD_NO" >> $GITHUB_OUTPUT

      - name: Print versioning
        run: |
          echo "Version: $VERSION"
          echo "Run No: $BUILD_NO"
        env:
          VERSION: ${{ inputs.TAG_NAME }}
          BUILD_NO: ${{ steps.build_version.outputs.build_no }}

    outputs:
      version: ${{ inputs.TAG_NAME }}
      build_version: ${{ steps.build_version.outputs.build_no }}

  build_ios:
    name: Build iOS App
    runs-on: macos-latest
    needs: [version]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.0

      - name: "[dev] Build iOS app"
        if: ${{ inputs.build_type == 'development' }}
        uses: ./.github/actions/build_ios
        with:
          version: ${{ needs.version.outputs.version }}
          build_version: ${{ needs.version.outputs.build_version }}
          apple_ios_signing_cert: ${{ secrets.APPLE_IOS_SIGNING_CERTIFICATE_DEVELOPMENT }}
          apple_ios_signing_cert_pw: ${{ secrets.APPLE_IOS_SIGNING_CERTIFICATE_DEVELOPMENT_PASSWORD }}
          apple_ios_provisioning_profile: ${{ secrets.APPLE_IOS_PROVISIONING_PROFILE_DEVELOPMENT }}
          apple_keychain_pw: ${{ secrets.APPLE_KEYCHAIN_PW }}
          store_artifacts: ${{ inputs.store_artifacts }}
          build_type: ${{ inputs.build_type }}

      - name: "[prod] Build iOS app"
        if: ${{ inputs.build_type == 'production' }}
        uses: ./.github/actions/build_ios
        with:
          version: ${{ needs.version.outputs.version }}
          build_version: ${{ needs.version.outputs.build_version }}
          apple_ios_signing_cert: ${{ secrets.APPLE_IOS_SIGNING_CERT_PROD }}
          apple_ios_signing_cert_pw: ${{ secrets.APPLE_IOS_SIGNING_CERT_PW }}
          apple_ios_provisioning_profile: ${{ secrets.APPLE_IOS_PROVISIONING_PROFILE_PROD }}
          apple_keychain_pw: ${{ secrets.APPLE_KEYCHAIN_PW }}
          store_artifacts: ${{ inputs.store_artifacts }}
          build_type: ${{ inputs.build_type }}

  build_android:
    name: Build Android App
    runs-on: ubuntu-latest
    needs: [version]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.0

      - name: Build Android app
        uses: ./.github/actions/build_android
        with:
          version: ${{ needs.version.outputs.version }}
          build_version: ${{ needs.version.outputs.build_version }}
          store_artifacts: ${{ inputs.store_artifacts }}
          build_type: ${{ inputs.build_type }}
          signingKeyBase64: ${{ secrets.ANDROID_KEYSTORE }}
          alias: ${{ secrets.ANDROID_KEY_ALIAS }}
          keyStorePassword: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.ANDROID_KEY_PASSWORD }}
