name: Build And Release Coffeecard App

on:
  push:
    branches: [develop, production, feature/jonas/prod-release-pipeline]

jobs:
  build_and_test:
    uses: ./.github/workflows/build.yml
    with:
      storeArtifacts: true

  dev_upload_ios:
    name: Upload iOS build to Firebase App Distribution
    runs-on: ubuntu-latest
    needs: [build_ios]
    if: github.ref_name == 'develop'

    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v3.0.0
        with:
          name: ios
      - name: Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1.3.3
        with:
          appId: ${{ secrets.FIREBASE_IOS_APP_ID }}
          token: ${{ secrets.FIREBASE_TOKEN }}
          groups: analogio-devs
          file: Analog.ipa

  dev_upload_apk:
    name: Upload Android build to Firebase App Distribution
    runs-on: ubuntu-latest
    needs: [build_android]
    if: github.ref_name == 'develop'

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3.0.0
        with:
          name: android
      - name: Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1.3.3
        with:
          appId: ${{ secrets.FIREBASE_ANDROID_APP_ID }}
          token: ${{ secrets.FIREBASE_TOKEN }}
          groups: analogio-devs
          file: app-release.apk
          
  prod_release_ios:
    name: Upload iOS build to App Store connect
    runs-on: macos-latest
    needs: [build_ios]
    if: github.ref_name == 'production'

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3.0.0
        with:
          name: ios
      - name: Upload app to App Store Connect
        env:
          APP_STORE_CONNECT_USERNAME: ${{ secrets.APP_STORE_CONNECT_USERNAME }}
          APP_STORE_CONNECT_PASSWORD: ${{ secrets.APP_STORE_CONNECT_PASSWORD }}
        run: |
          xcrun altool --upload-app -t ios -f "Analog.ipa" -u "$APP_STORE_CONNECT_USERNAME" -p "$APP_STORE_CONNECT_PASSWORD"

  prod_release_android:
    name: Upload Android build to Play Store
    runs-on: ubuntu-latest
    needs: [build_apk]
    if: github.ref_name == 'production'

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3.0.0
        with:
          name: android
      - name: Sign Android APK
        uses: r0adkll/sign-android-release@v1
        id: sign_app
        with:
          releaseDirectory: .
          signingKeyBase64: ${{ secrets.ANDROID_KEYSTORE }}
          alias: ${{ secrets.ANDROID_KEY_ALIAS }}
          keyStorePassword: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.ANDROID_KEY_PASSWORD }}
      - name: Upload to Google Play Store
        uses: r0adkll/upload-google-play@v1.0.16
        with:
          serviceAccountJsonPlainText: ${{ secrets.PLAYSTORE_SERVICE_ACCOUNT_JSON }}
          packageName: dk.analog.digitalclipcard
          releaseFiles: ${{ steps.sign_app.outputs.signedReleaseFile }}
          track: internal
          status: draft
